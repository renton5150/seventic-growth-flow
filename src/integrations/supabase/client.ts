
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Utilisation de l'URL et de la clé Supabase fournies par Lovable
const SUPABASE_URL = "https://dupguifqyjchlmzbadav.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR1cGd1aWZxeWpjaGxtemJhZGF2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM4ODI2NDgsImV4cCI6MjA1OTQ1ODY0OH0.wbRuEEYI0bK9CvYRGYi4zZ64xY1L3fgU2PPshCJbsL4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Vérifier que les variables sont correctement définies
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error("ERREUR: URL Supabase ou clé d'API manquante!");
}

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: false,
    storage: typeof window !== 'undefined' ? localStorage : undefined
  }
});

console.log("Supabase client configuré avec URL:", SUPABASE_URL);

// Test de connexion initial
(async () => {
  try {
    console.log("Test de connexion Supabase...");
    const { error } = await supabase.from("missions").select("id").limit(1);
    if (error) {
      console.error("Échec du test de connexion Supabase:", error);
    } else {
      console.log("Test de connexion Supabase réussi");
    }
  } catch (err) {
    console.error("Erreur lors du test de connexion:", err);
  }
})();
